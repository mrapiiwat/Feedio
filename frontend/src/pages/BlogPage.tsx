import React, { useState } from "react";
import { motion } from "framer-motion";

const BlogPage: React.FC = () => {
  const [breed, setBreed] = useState("");
  const [age, setAge] = useState("");
  const [weight, setWeight] = useState("");
  const [gender, setGender] = useState("");
  const [activity, setActivity] = useState("");
  const [disease, setDisease] = useState("");
  const [result, setResult] = useState("");

  const handleCalculate = () => {
    // MOCK Result: ‡∏™‡∏°‡∏°‡∏∏‡∏ï‡∏¥‡∏ß‡πà‡∏≤ fetch ‡∏à‡∏≤‡∏Å backend ‡πÅ‡∏•‡πâ‡∏ß
    const summary = `üêæ ‡∏™‡∏≤‡∏¢‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå: ${breed} ‡πÄ‡∏û‡∏®: ${gender}
‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å ${weight} ‡∏Å‡∏Å. ‡∏≠‡∏≤‡∏¢‡∏∏ ${age} ‡∏õ‡∏µ
‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${activity}
üîç AI ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏Å‡∏¥‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ~ 220 ‡∏Å‡∏£‡∏±‡∏°/‡∏ß‡∏±‡∏ô ‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô 2 ‡∏°‡∏∑‡πâ‡∏≠`;
    setResult(summary);
  };

  return (
    
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      exit={{ opacity: 0 }}
      transition={{ duration: 0.4 }}
      className="px-4 py-8"
    >
      <div className="max-w-3xl mx-auto px-6 py-10 text-[#4D2C1D] font-kanit">
        {/* Header */}
        <h1 className="text-3xl font-bold text-center mb-6">
          üê∂ Feedio AI ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ô‡πâ‡∏≠‡∏á‡∏´‡∏°‡∏≤
        </h1>
        <p className="text-center mb-8 text-gray-700">
          ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏ô‡πâ‡∏≠‡∏á‡∏´‡∏°‡∏≤ ‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏´‡πâ AI ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ß‡∏±‡∏ô
        </p>

        {/* Form */}
        <div className="space-y-4 bg-[#F9F3E3] p-6 rounded-xl shadow">
          <div>
            <label className="block font-medium">‡∏™‡∏≤‡∏¢‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå</label>
            <input
              type="text"
              value={breed}
              onChange={(e) => setBreed(e.target.value)}
              placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏ä‡∏¥‡∏ß‡∏≤‡∏ß‡∏≤, ‡πÇ‡∏Å‡∏•‡πÄ‡∏î‡πâ‡∏ô"
              className="w-full mt-1 p-2 rounded border"
            />
          </div>

          <div className="grid grid-cols-2 gap-4">
            <div>
              <label className="block font-medium">‡πÄ‡∏û‡∏®</label>
              <select
                value={gender}
                onChange={(e) => setGender(e.target.value)}
                className="w-full p-2 rounded border"
              >
                <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏® --</option>
                <option value="‡πÄ‡∏û‡∏®‡∏ú‡∏π‡πâ">‡πÄ‡∏û‡∏®‡∏ú‡∏π‡πâ</option>
                <option value="‡πÄ‡∏û‡∏®‡πÄ‡∏°‡∏µ‡∏¢">‡πÄ‡∏û‡∏®‡πÄ‡∏°‡∏µ‡∏¢</option>
              </select>
            </div>

            <div>
              <label className="block font-medium">‡∏≠‡∏≤‡∏¢‡∏∏ (‡∏õ‡∏µ)</label>
              <input
                type="number"
                min="0"
                value={age}
                onChange={(e) => setAge(e.target.value)}
                className="w-full p-2 rounded border"
              />
            </div>
          </div>

          <div className="grid grid-cols-2 gap-4">
            <div>
              <label className="block font-medium">‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å (‡∏Å‡∏Å.)</label>
              <input
                type="number"
                min="0"
                value={weight}
                onChange={(e) => setWeight(e.target.value)}
                className="w-full p-2 rounded border"
              />
            </div>

            <div>
              <label className="block font-medium">‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°</label>
              <select
                value={activity}
                onChange={(e) => setActivity(e.target.value)}
                className="w-full p-2 rounded border"
              >
                <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö --</option>
                <option value="‡∏ï‡πà‡∏≥">‡∏ï‡πà‡∏≥</option>
                <option value="‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á">‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á</option>
                <option value="‡∏™‡∏π‡∏á">‡∏™‡∏π‡∏á</option>
              </select>
            </div>
          </div>

          <div>
            <label className="block font-medium">‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)</label>
            <textarea
              value={disease}
              onChange={(e) => setDisease(e.target.value)}
              rows={2}
              placeholder="‡πÑ‡∏°‡πà‡∏°‡∏µ / ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏û‡∏¥‡πà‡∏°"
              className="w-full p-2 rounded border"
            />
          </div>

          <button
            onClick={handleCalculate}
            className="w-full bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-2 rounded-xl"
          >
            üìä ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
          </button>
        </div>

        {/* AI Result */}
        {result && (
          <div className="mt-8 p-4 bg-[#ded1c6] rounded-xl shadow-inner">
            <h2 className="text-xl font-bold mb-2">üß† ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏≤‡∏Å AI</h2>
            <pre className="whitespace-pre-wrap text-sm text-gray-800">
              {result}
            </pre>
          </div>
        )}
      </div>
    </motion.div>
  );
};

export default BlogPage;
